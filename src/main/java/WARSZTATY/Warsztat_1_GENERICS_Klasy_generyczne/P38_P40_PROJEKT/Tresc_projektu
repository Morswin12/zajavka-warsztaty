Projekt

Napisz program, w którym zdefiniujesz klasę Osoba posiadającą pola name, surname oraz counter. Osoba
może przyjść zrobić zakupy i zderzyć się z kolejką w sklepie. Taka osoba może się w kolejce ustawić i
czekać. Jeżeli poczeka, to może przyjść jej kolej i może wejść do sklepu. Może też dojść do wniosku, że
ma dość i sobie pójść. Pozwól użytkownikowi swojego programu na zabawę taką kolejką, dając
możliwość wykonania operacji, które zostały wspomniane, czyli dodanie osoby do kolejki, kolejka
przesuwa się do przodu, osoba odpuszcza i opuszcza kolejkę.

Jeżeli do kolejki dodasz osobę o tym samym imieniu i nazwisku parę razy, to w każdej z nich ma się
zwiększać counter, po to aby móc zdefiniować 2 osoby np. TOMASZ_ROMAŃSKI_1 oraz TOMASZ_ROMAŃSKI_2.
Potrzebne jest to do dalszej logiki w programie. Jeżeli TOMASZ_ROMAŃSKI_1 nie będzie już stał w kolejce, i
przyjdzie kolejny TOMASZ_ROMAŃSKI, to ma on otrzymać numer 3, a nie 1.

Wykorzystaj klasę Scanner od odczytu danych od użytkownika. Dane takie będziemy wprowadzać w
terminalu. Napisz też wariant z danymi zapisanymi na sztywno w liście.

Program będzie przyjmował od użytkownika komendy tekstowe, musimy więc ustalić na jakie
zachowania ma reagować. Zatem jeżeli wpiszesz:

• ADD PERSON(Tomasz_Romański) - taka osoba ustawi się w kolejce, podłogą oddzielamy imię i nazwisko.
Jeżeli zduplikujesz osobę, zostanie zwiększony counter. Osoba może mieć tylko jedno imię i
nazwisko.

• PROCESS - kolejka przesunie się o jedną osobę do przodu, czyli każda osoba czekająca w kolejce
przesunie się o jedno miejsce do przodu

• LEAVE PERSON(Tomasz_Romański_2) - osoba o takim imieniu i nazwisku (tutaj widzisz po co jest to pole
counter, żeby jednoznacznie identyfikować, o której osobie mówimy) odpuszcza stanie w kolejce i
sobie idzie. Pozostałe osoby wtedy przesuwają się w kolejce do przodu.

Jeżeli program nie rozpozna komendy, ma wypisać na ekranie: "O co Ci chodzi?". Zapewnij, aby przy
każdym kroku na ekranie drukowała się zawartość kolejki.

Nie zostaje narzucona obsługa przypadków skrajnych, czyli np, jak ma się zachować program jeżeli
powiemy, że kolejkę musi opuścić osoba, której na tej kolejce nie ma. Pozwalam Ci wymyślić
samodzielnie co zrobić w takich sytuacjach ὠ.

Przykład sekwencji wejściowej:

ADD PERSON(Tomasz_Romański)
ADD PERSON(Rafał_Adamczuk)
ADD PERSON(Tomasz_Romański)
ADD PERSON(Mariusz_Wilczek)
ADD PERSON(Zbigniew_Ratownik)
PROCESS
LEAVE PERSON(Tomasz_Romański_2)
LEAVE PERSON(Mariusz_Wilczek)
PROCESS
PROCESS
PROCESS

| 1

Przykład co może być wydrukowane na ekranie:

ADD PERSON(Tomasz_Romański)
Tomasz_Romański_1 came to the queue: true
Queue: [Tomasz_Romański_1]
ADD PERSON(Rafał_Adamczuk)
Rafał_Adamczuk_1 came to the queue: true
Queue: [Tomasz_Romański_1, Rafał_Adamczuk_1]
ADD PERSON(Tomasz_Romański)
Tomasz_Romański_2 came to the queue: true
Queue: [Tomasz_Romański_1, Rafał_Adamczuk_1, Tomasz_Romański_2]
ADD PERSON(Mariusz_Wilczek)
Mariusz_Wilczek_1 came to the queue: true
Queue: [Tomasz_Romański_1, Rafał_Adamczuk_1, Tomasz_Romański_2, Mariusz_Wilczek_1]
ADD PERSON(Zbigniew_Ratownik)
Zbigniew_Ratownik_1 came to the queue: true
Queue: [Tomasz_Romański_1, Rafał_Adamczuk_1, Tomasz_Romański_2, Mariusz_Wilczek_1, Zbigniew_Ratownik_1]
PROCESS
Processing queue: Tomasz_Romański_1 arrived at the store
Queue: [Rafał_Adamczuk_1, Tomasz_Romański_2, Mariusz_Wilczek_1, Zbigniew_Ratownik_1]
LEAVE PERSON(Tomasz_Romański_2)
Leaving queue: Tomasz_Romański_2
Queue: [Rafał_Adamczuk_1, Mariusz_Wilczek_1, Zbigniew_Ratownik_1]
PROCESS
Processing queue: Rafał_Adamczuk_1 arrived at the store
Queue: [Mariusz_Wilczek_1, Zbigniew_Ratownik_1]
PROCESS
Processing queue: Mariusz_Wilczek_1 arrived at the store
Queue: [Zbigniew_Ratownik_1]
PROCESS
Processing queue: Zbigniew_Ratownik_1 arrived at the store
Queue: []

Następnie dodaj opcję VIPów, czyli ludzi, którzy jak przyjdą to trafiają na początek kolejki. Nie narzucam
kryteriów ustalania kto ma być pierwszy w kolejce jak przyjdzie 2 VIPów, możesz to ustalić jak chcesz.
Jeżeli jeszcze nie rozumiesz czemu o tym piszę, to zrozumiesz pisząc kod ὠ. Do wiadomości wysyłanych
do Twojego programu dodaj takie parametry:

• ADD PERSON(Tomasz_Romański,VIP) - taki gość jest VIPem,

• ADD PERSON(Tomasz_Romański) - a taki nie jest,

• PROCESS oraz LEAVE PERSON(Tomasz_Romański_2) zostają tak jak były wcześniej.

Spróbuj wymyślić jak można to zrealizować, nie daję więcej wskazówek. Przykład sekwencji wejściowej:

ADD PERSON(Tomasz_Romański)
ADD PERSON(Rafał_Adamczuk)
2 |
ADD PERSON(Tomasz_Romański)
ADD PERSON(Mariusz_Wilczek,VIP)
ADD PERSON(Zbigniew_Ratownik)
ADD PERSON(Roman_Tomaszewski,VIP)
PROCESS
LEAVE PERSON(Zbigniew_Ratownik)
LEAVE PERSON(Tomasz_Romański_2)
PROCESS
PROCESS
PROCESS

Przykład co może być wydrukowane na ekranie:

ADD PERSON(Tomasz_Romański)
Tomasz_Romański_1 came to the queue: true
Queue: [Tomasz_Romański_1]
ADD PERSON(Rafał_Adamczuk)
Rafał_Adamczuk_1 came to the queue: true
Queue: [Tomasz_Romański_1, Rafał_Adamczuk_1]
ADD PERSON(Tomasz_Romański)
Tomasz_Romański_2 came to the queue: true
Queue: [Tomasz_Romański_1, Rafał_Adamczuk_1, Tomasz_Romański_2]
ADD PERSON(Mariusz_Wilczek,VIP)
Mariusz_Wilczek_1_VIP came to the queue: true
Queue: [Mariusz_Wilczek_1_VIP, Tomasz_Romański_1, Rafał_Adamczuk_1, Tomasz_Romański_2]
ADD PERSON(Zbigniew_Ratownik)
Zbigniew_Ratownik_1 came to the queue: true
Queue: [Mariusz_Wilczek_1_VIP, Tomasz_Romański_1, Rafał_Adamczuk_1, Tomasz_Romański_2,
Zbigniew_Ratownik_1]
ADD PERSON(Roman_Tomaszewski,VIP)
Roman_Tomaszewski_1_VIP came to the queue: true
Queue: [Mariusz_Wilczek_1_VIP, Roman_Tomaszewski_1_VIP, Tomasz_Romański_1, Rafał_Adamczuk_1, Tomasz_Roma
ński_2, Zbigniew_Ratownik_1]
PROCESS
Processing queue: Mariusz_Wilczek_1_VIP arrived at the store
Queue: [Roman_Tomaszewski_1_VIP, Tomasz_Romański_1, Rafał_Adamczuk_1, Tomasz_Romański_2,
Zbigniew_Ratownik_1]
LEAVE PERSON(Zbigniew_Ratownik)
Leaving queue: Zbigniew_Ratownik_1
Queue: [Roman_Tomaszewski_1_VIP, Tomasz_Romański_1, Rafał_Adamczuk_1, Tomasz_Romański_2]
LEAVE PERSON(Tomasz_Romański_2)
Leaving queue: Tomasz_Romański_2
Queue: [Roman_Tomaszewski_1_VIP, Tomasz_Romański_1, Rafał_Adamczuk_1]
PROCESS
Processing queue: Roman_Tomaszewski_1_VIP arrived at the store
Queue: [Tomasz_Romański_1, Rafał_Adamczuk_1]
PROCESS
Processing queue: Tomasz_Romański_1 arrived at the store
Queue: [Rafał_Adamczuk_1]
| 3
PROCESS
Processing queue: Rafał_Adamczuk_1 arrived at the store
Queue: []
4 |